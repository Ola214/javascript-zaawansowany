function AJAX(t) {
  if (!(this instanceof AJAX)) return new AJAX(t);
  (this._xhr = new XMLHttpRequest()),
    (this._config = this._extendOptions(t)),
    this._assignEvents(),
    this._beforeSend();
}
(AJAX.prototype._extendOptions = function (t) {
  var e,
    i = JSON.parse(JSON.stringify(this._defaultConfig));
  for (e in i) e in t || (t[e] = i[e]);
  return t;
}),
  (AJAX.prototype._assignEvents = function () {
    this._xhr.addEventListener(
      "readystatechange",
      this._handleResponse.bind(this),
      !1
    ),
      this._xhr.addEventListener("abort", this._handleError.bind(this), !1),
      this._xhr.addEventListener("error", this._handleError.bind(this), !1),
      this._xhr.addEventListener("timeout", this._handleError.bind(this), !1);
  }),
  (AJAX.prototype._assignUserHeaders = function () {
    if (Object.keys(this._config.headers).length)
      for (var t in this._config.headers)
        this._xhr.setRequestHeader(t, this._config.headers[t]);
  }),
  (AJAX.prototype._open = function () {
    this._xhr.open(
      this._config.type,
      this._config.url,
      this._config.options.async,
      this._config.options.username,
      this._config.options.password
    ),
      this._xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
      (this._xhr.timeout = this._config.options.timeout);
  }),
  (AJAX.prototype._beforeSend = function () {
    var t = 0 < Object.keys(this._config.data).length,
      e = null;
    "POST" === this._config.type.toUpperCase() && t
      ? (e = this._serializeFormData(this._config.data))
      : "GET" === this._config.type.toUpperCase() &&
        t &&
        (this._config.url += "?" + this._serializeData(this._config.data)),
      this._open(),
      this._assignUserHeaders(),
      this._send(e);
  }),
  (AJAX.prototype._send = function (t) {
    this._xhr.send(t);
  }),
  (AJAX.prototype._handleResponse = function (t) {
    4 === this._xhr.readyState &&
    200 <= this._xhr.status &&
    this._xhr.status < 400
      ? "function" == typeof this._config.success &&
        this._config.success(this._xhr.response, this._xhr)
      : 4 === this._xhr.readyState &&
        400 <= this._xhr.status &&
        this._handleError();
  }),
  (AJAX.prototype._handleError = function (t) {
    "function" == typeof this._config.failure &&
      this._config.failure(this._xhr);
  }),
  (AJAX.prototype._serializeData = function (t) {
    var e,
      i = "";
    for (e in t) i += e + "=" + encodeURIComponent(t[e]) + "&";
    return i.slice(0, i.length - 1);
  }),
  (AJAX.prototype._serializeFormData = function (t) {
    var e,
      i = new FormData();
    for (e in t) i.append(e, t[e]);
    return i;
  }),
  (AJAX.prototype._defaultConfig = {
    type: "GET",
    url: window.location.href,
    data: {},
    options: { async: !0, timeout: 0, username: null, password: null },
    headers: {},
  });
